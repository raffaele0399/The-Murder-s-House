package Grafica;

import Utility.Utils;

/**
 * Classe che rappresenta la finestra descrittiva dei comandi.
 * @author Raffaele Nacci
 * @author Manuel Roberto Matera
 */
public class InterfacciaAiuto extends javax.swing.JFrame {

    private static final String AIUTO = "ECCO A TE I COMANDI DI GIOCO PER AFFRONTARE AL MEGLIO QUESTA AVVENTURA:\n\n\n"
            + "Come vedi in basso alla schermata di gioco c'\u00e8 uno spazio grigio,"
            + "all'interno potrai inserire i comandi per andare avanti nel gioco.\n"
            + "I comandi che potrai inserire dovranno essere piccole frasi "
            + "che ti serviranno per spostarti all'interno della mappa, "
            + "interagire con gli oggetti che troverai e con l'ambiente circostante.\n"
            + "Ecco a te un elenco di alcuni dei comandi che potrai usare:\n"
            + "1. vai a nord,\n"
            + "2. vai a est,\n"
            + "3. osserva la stanza,\n"
            + "4. osserva il salotto,\n"
            + "5. prendi la collana,\n\n"
            + "Potrai scrivere i comandi anche in modo pi\u00f9 semplice"
            + "eliminando gli articoli.\n"
            + "Inoltre, ogni volta che inserirai un nuovo comando, "
            + "premendo il tasto INVIO (o ENTER) sulla tastiera, il comando"
            + "verr\u00e0 eseguito.\n"
            + "Per poterti spostare all'interno della mappa "
            + "dovrai utilizzare i comandi come descritti sopra "
            + "facendo riferimento ai punti cardinali:\n"
            + "- nord/n = andare in alto nella mappa\n"
            + "- sud/s = andare in basso nella mappa\n"
            + "- est/e = andare a destra nella mappa\n"
            + "- ovest/o/w = andare a sinistra nella mappa\n\n"
            + "Durante quest'avventura potrai trovare degli oggetti, "
            + "se sceglierai di raccoglierli, potrai vederli all'interno dello 'zaino' "
            + "Se desideri salvare la partita corrente pre riprenderla in un secondo momento, vai in "
            + "'opzioni' e troverai i pulsanti per il salvataggio e il caricamento di una sessione.\n\n"
            + "Infine, se sei curioso cliccando su 'Wiki' potrai leggere un piccolo"
            + "accenno su cos'\u00e8 un'avventura testuale.\n"
            + "Questo era quello che dovevi sapere,"
            + "se hai ancora dubbi puoi cliccare 'Aiuto' per visualizzare"
            + "di nuovo questa finestra.\n\n"
            + "Ed ora ti auguriamo il massimo divertimento da:\n"
            + "Manuel Roberto Matera e Raffaele Nacci";
    
    /**
     * Creates new form InterfacciaAiuto
     */
    public InterfacciaAiuto() {
        initComponents();
        
        Utils.stampa(AIUTO, this.textAreaDescrizione);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sfondo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaDescrizione = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        sfondo.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setForeground(new java.awt.Color(0, 0, 0));

        textAreaDescrizione.setEditable(false);
        textAreaDescrizione.setBackground(new java.awt.Color(255, 255, 255));
        textAreaDescrizione.setColumns(20);
        textAreaDescrizione.setFont(new java.awt.Font("Century Schoolbook", 0, 20)); // NOI18N
        textAreaDescrizione.setForeground(new java.awt.Color(0, 0, 0));
        textAreaDescrizione.setLineWrap(true);
        textAreaDescrizione.setRows(5);
        textAreaDescrizione.setWrapStyleWord(true);
        textAreaDescrizione.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(textAreaDescrizione);

        javax.swing.GroupLayout sfondoLayout = new javax.swing.GroupLayout(sfondo);
        sfondo.setLayout(sfondoLayout);
        sfondoLayout.setHorizontalGroup(
            sfondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sfondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 888, Short.MAX_VALUE)
                .addContainerGap())
        );
        sfondoLayout.setVerticalGroup(
            sfondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sfondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 888, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sfondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sfondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfacciaAiuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfacciaAiuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfacciaAiuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfacciaAiuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfacciaAiuto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel sfondo;
    private javax.swing.JTextArea textAreaDescrizione;
    // End of variables declaration//GEN-END:variables
}
